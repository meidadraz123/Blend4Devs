//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.GameData
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class GameData { }
#else

	public class GameData : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public GameData()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/TourOfBlend;component/SampleData/GameData/GameData.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private Games _Games = new Games();

		public Games Games
		{
			get
			{
				return this._Games;
			}
		}
	}

	public class GamesItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private System.Windows.Media.ImageSource _Cover = null;

		public System.Windows.Media.ImageSource Cover
		{
			get
			{
				return this._Cover;
			}

			set
			{
				if (this._Cover != value)
				{
					this._Cover = value;
					this.OnPropertyChanged("Cover");
				}
			}
		}

		private string _Price = string.Empty;

		public string Price
		{
			get
			{
				return this._Price;
			}

			set
			{
				if (this._Price != value)
				{
					this._Price = value;
					this.OnPropertyChanged("Price");
				}
			}
		}

		private string _ReleaseDate = string.Empty;

		public string ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}

			set
			{
				if (this._ReleaseDate != value)
				{
					this._ReleaseDate = value;
					this.OnPropertyChanged("ReleaseDate");
				}
			}
		}

		private Genre _Genre = new Genre();

		public Genre Genre
		{
			get
			{
				return this._Genre;
			}

			set
			{
				if (this._Genre != value)
				{
					this._Genre = value;
					this.OnPropertyChanged("Genre");
				}
			}
		}
	}

	public class Games : System.Collections.ObjectModel.ObservableCollection<GamesItem>
	{ 
	}

	public class Genre : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
	}
#endif
}
